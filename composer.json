{
    "name": "ampersand/magento2-disable-stock-reservation",
    "description": "This module disables the inventory reservation logic introduced as part of MSI in Magento 2.3.3",
    "type": "magento2-module",
    "require": {
        "magento/framework": "*",
        "php": "^7.1|^8.0"
    },
    "autoload": {
        "files": [
            "src/registration.php"
        ],
        "psr-4": {
            "Ampersand\\DisableStockReservation\\": "src"
        }
    },
    "config": {
        "allow-plugins": {
            "magento/*": true
        },
        "process-timeout": 1200
    },
    "repositories": [
        {
            "type": "composer",
            "url": "https://repo-magento-mirror.fooman.co.nz/"
        }
    ],
    "require-dev": {
        "codeception/codeception": "^4.1.1",
        "codeception/module-phpbrowser": "^1.0.0",
        "codeception/module-asserts": "^1.1.0",
        "codeception/module-db": "^1.0.1",
        "ampersand/magento-docker-test-instance": "^0.1",
        "codeception/module-rest": "^1.2.0",
        "friendsofphp/php-cs-fixer": "^2.16",
        "magento/magento-coding-standard": "<16",
        "tddwizard/magento2-fixtures": "^1.1"
    },
    "scripts": {
        "docker-install-magento": [
            "CURRENT_EXTENSION=\".\" FULL_INSTALL=1 COMPOSER_REQUIRE_EXTRA='tddwizard/magento2-fixtures' TWOFACTOR_ENABLED=1 UNIT_TESTS_PATH='dev/MagentoTests/Unit' INTEGRATION_TESTS_PATH='dev/MagentoTests/Integration' vendor/bin/mtest-make $TEST_GROUP",
            "vendor/bin/mtest 'php bin/magento setup:db-declaration:generate-whitelist --module-name=Ampersand_DisableStockReservation'"
        ],
        "docker-configure-magento": [
            "vendor/bin/mtest 'mkdir -p app/etc/ampersandconfig && cp -f vendor/ampersand/magento2-disable-stock-reservation/dev/MagentoTests/IntegrationConfig/config.xml app/etc/ampersandconfig'",
            "vendor/bin/mtest 'vendor/bin/n98-magerun2 config:store:set checkout/options/guest_checkout 1'",
            "vendor/bin/mtest 'vendor/bin/n98-magerun2 config:store:set payment/checkmo/active 1'",
            "vendor/bin/mtest 'vendor/bin/n98-magerun2 config:store:set oauth/consumer/enable_integration_as_bearer 1'",
            "vendor/bin/mtest 'vendor/bin/n98-magerun2 integration:create disablestockres example@example.com https://example.com --access-token=aaaaaaaaaaaaaaaaaaaaaaaaaaaaaaaa'",
            "vendor/bin/mtest 'php bin/magento cache:flush'",
            "vendor/bin/mtest 'php bin/magento --version'"
        ],
        "docker-run-codeception": [
            "URL=\"http://0.0.0.0:1234/\" MYSQL_USER=\"root\" MYSQL_HOST=\"0.0.0.0\" MYSQL_DB=\"magento\" MYSQL_PORT=\"1235\" ./dev/run-codeception.sh"
        ],
        "docker-run-unit-tests": [
            "vendor/bin/mtest 'vendor/bin/phpunit -c /var/www/html/dev/tests/unit/phpunit.xml.dist --testsuite Unit --debug'"
        ],
        "docker-run-integration-tests": [
            "vendor/bin/mtest 'vendor/bin/phpunit -c /var/www/html/dev/tests/integration/phpunit.xml.dist --testsuite Integration --filter testPlaceOrderAndCancelWithMsi --debug '"
        ],
        "post-install-cmd": [
            "([ $COMPOSER_DEV_MODE -eq 0 ] || vendor/bin/phpcs --config-set installed_paths ../../magento/magento-coding-standard/)"
        ],
        "post-update-cmd": [
            "([ $COMPOSER_DEV_MODE -eq 0 ] || vendor/bin/phpcs --config-set installed_paths ../../magento/magento-coding-standard/)"
        ]
    }
}
